AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  image-processing-workflow

  Sample SAM Template for image-processing-workflow
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:

  FaceDetectionFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      # Layers:
      #   - !Sub "arn:aws:lambda:ap-southeast-1:580247275435:layer:LambdaInsightsExtension:14"
      CodeUri: facedetection/
      Handler: app.handler
      Runtime: nodejs12.x
      Timeout: 60
      MemorySize: 256
      Tracing: Active
      Policies:
      - CloudWatchLambdaInsightsExecutionRolePolicy
      - Statement:
        - Action:
          - s3:GetObject
          Effect: Allow
          Resource: '*'
          Sid: ReadFromS3Bucket
        - Action:
          - rekognition:DetectFaces
          Effect: Allow
          Resource: '*'
          Sid: RekognitionFace
      AutoPublishAlias: Production
      DeploymentPreference:
        Type: Canary10Percent10Minutes 
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: '/detectface'
            Method: post
            RestApiId: RekognitionAPI

  ##   API Gateway
  RekognitionAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      EndpointConfiguration: REGIONAL
      #CanarySetting:
      #  PercentTraffic: 0
      TracingEnabled: true
      MethodSettings:
        - HttpMethod: "*"
          ResourcePath: "/*"
          LoggingLevel: INFO
          DataTraceEnabled: true
          MetricsEnabled: true
        - HttpMethod: "post"
          ResourcePath: "/detectface"
      DefinitionBody:
        "Fn::Transform":
          Name: "AWS::Include"
          Parameters:
            Location: "./api.yaml"
        


  ApiRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - apigateway.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
      - PolicyName: AllowLambdaExec
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: "lambda:*"
              Resource: !GetAtt FaceDetectionFunction.Arn  

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  FaceDetectionFunction:
    Description: "Face Detect Lambda Function ARN"
    Value: !GetAtt FaceDetectionFunction.Arn
  FaceDetectionFunctionIamRole:
    Description: "Implicit IAM Role created for Face Detect function"
    Value: !GetAtt FaceDetectionFunctionRole.Arn
  FaceDetectionFunctionApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${RekognitionAPI}.execute-api.${AWS::Region}.amazonaws.com/detectface"